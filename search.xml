<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>内网穿透工具 Frp 配置文件示例（中文翻译版）</title>
    <url>/posts/ccdb52ca/</url>
    <content><![CDATA[<h1 id="内网穿透工具-Frp-配置文件示例（中文翻译版）"><a href="#内网穿透工具-Frp-配置文件示例（中文翻译版）" class="headerlink" title="内网穿透工具 Frp 配置文件示例（中文翻译版）"></a>内网穿透工具 Frp 配置文件示例（中文翻译版）</h1><p>若有错误，恳请指正<br>cicii翻译于2024年5月19日<br><a href="https://github.com/fatedier/frp">GitHub - fatedier&#x2F;frp</a></p>
<h2 id="服务端配置文件-frps-toml"><a href="#服务端配置文件-frps-toml" class="headerlink" title="服务端配置文件 frps.toml"></a>服务端配置文件 frps.toml</h2><figure class="highlight toml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># frps.toml</span></span><br><span class="line"><span class="comment"># 此配置文件仅供参考。请不要直接使用此配置来运行程序，因为它可能存在各种问题。</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 必须包含IPv6的文本地址或主机名在方括号中，例如 [::1]:80 、 [IPv6-host]:http 或 [IPv6-host%zone]:80 。对于单个 bindAddr 字段，不需要方括号，例如 bindAddr = &quot;::&quot; 。</span></span><br><span class="line"><span class="attr">bindAddr</span> = <span class="string">&quot;0.0.0.0&quot;</span></span><br><span class="line"><span class="attr">bindPort</span> = <span class="number">7000</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 用于KCP协议的UDP端口，它可以与 bindPort 相同。如果未设置，则在frp中禁用KCP协议。</span></span><br><span class="line"><span class="attr">kcpBindPort</span> = <span class="number">7000</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 用于QUIC协议的UDP端口。如果未设置，则QUIC将在frp中禁用。</span></span><br><span class="line"><span class="comment"># quicBindPort = 7002</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 指定代理将监听的地址，默认值与 bindAddr 相同。</span></span><br><span class="line"><span class="comment"># proxyBindAddr = &quot;127.0.0.1&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># QUIC协议选项</span></span><br><span class="line"><span class="comment"># transport.quic.keepalivePeriod = 10</span></span><br><span class="line"><span class="comment"># transport.quic.maxIdleTimeout = 30</span></span><br><span class="line"><span class="comment"># transport.quic.maxIncomingStreams = 100000</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 心跳配置，不建议修改默认值， heartbeatTimeout 的默认值为90，设置负值以禁用它。</span></span><br><span class="line"><span class="comment"># transport.heartbeatTimeout = 90</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 每个代理中的池计数将保留不超过 maxPoolCount 。</span></span><br><span class="line"><span class="attr">transport.maxPoolCount</span> = <span class="number">5</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 如果使用TCP多路复用技术，则默认值为 true 。</span></span><br><span class="line"><span class="comment"># transport.tcpMux = true</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 指定TCP多路复用的保活间隔，仅当 tcpMux 为 true 时才有效。</span></span><br><span class="line"><span class="comment"># transport.tcpMuxKeepaliveInterval = 60</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># tcpKeepalive 指定frpc和frps之间活动网络连接的保活探测器之间的间隔。如果为负数，则禁用保活探测器。</span></span><br><span class="line"><span class="comment"># transport.tcpKeepalive = 7200</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># transport.tls.force 指定是否仅接受TLS加密的连接。默认情况下，该值为 false 。</span></span><br><span class="line"><span class="attr">transport.tls.force</span> = <span class="literal">false</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># transport.tls.certFile = &quot;server.crt&quot;</span></span><br><span class="line"><span class="comment"># transport.tls.keyFile = &quot;server.key&quot;</span></span><br><span class="line"><span class="comment"># transport.tls.trustedCaFile = &quot;ca.crt&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 如果要支持虚拟主机，则必须设置用于监听的HTTP端口（可选）。注意：HTTP端口和HTTPS端口可以和 bindPort 一样。</span></span><br><span class="line"><span class="attr">vhostHTTPPort</span> = <span class="number">80</span></span><br><span class="line"><span class="attr">vhostHTTPSPort</span> = <span class="number">443</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># vhostHTTP服务器的响应标头超时（秒），默认为60秒。</span></span><br><span class="line"><span class="comment"># vhostHTTPTimeout = 60</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># tcpmuxHTTPConnectPort 指定服务器监听HTTP连接请求的TCP端口。</span></span><br><span class="line"><span class="comment"># 如果该值为0，则服务器不会在一个端口上TCP多路复用请求。</span></span><br><span class="line"><span class="comment"># 如果该值不为0，它将监听HTTP连接请求的TCP端口。默认情况下，此值为0。</span></span><br><span class="line"><span class="comment"># tcpmuxHTTPConnectPort = 1337</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 如果 tcpmuxPassthrough 为 true ，则frps不会对流量进行任何更新。</span></span><br><span class="line"><span class="comment"># tcpmuxPassthrough = false</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 配置Web服务器以启用frps仪表板。仪表板仅当设置了 webServer.port 时才可用。</span></span><br><span class="line"><span class="attr">webServer.addr</span> = <span class="string">&quot;127.0.0.1&quot;</span></span><br><span class="line"><span class="attr">webServer.port</span> = <span class="number">7500</span></span><br><span class="line"><span class="attr">webServer.user</span> = <span class="string">&quot;admin&quot;</span></span><br><span class="line"><span class="attr">webServer.password</span> = <span class="string">&quot;admin&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># webServer.tls.certFile = &quot;server.crt&quot;</span></span><br><span class="line"><span class="comment"># webServer.tls.keyFile = &quot;server.key&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 仪表板资产目录（仅适用于调试模式）</span></span><br><span class="line"><span class="comment"># webServer.assetsDir = &quot;./static&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 在仪表板监听器中启用golang pprof处理程序。必须先设置仪表板端口。</span></span><br><span class="line"><span class="attr">webServer.pprofEnable</span> = <span class="literal">false</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># enablePrometheus 将在 /metrics api 中导出 webServer 上的 prometheus 指标。</span></span><br><span class="line"><span class="attr">enablePrometheus</span> = <span class="literal">true</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 控制台或实际日志文件路径，如 ./frps.log 。</span></span><br><span class="line"><span class="attr">log.to</span> = <span class="string">&quot;./frps.log&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 跟踪、调试、信息、警告、错误</span></span><br><span class="line"><span class="comment"># trace, debug, info, warn, error</span></span><br><span class="line"><span class="attr">log.level</span> = <span class="string">&quot;info&quot;</span></span><br><span class="line"><span class="attr">log.maxDays</span> = <span class="number">3</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># log.to 为控制台时是否禁用日志颜色，默认为 false 。</span></span><br><span class="line"><span class="attr">log.disablePrintColor</span> = <span class="literal">false</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># DetailedErrorsToClient 定义是否将特定错误（带有调试信息）发送到frpc。默认情况下，此值为 true 。</span></span><br><span class="line"><span class="attr">detailedErrorsToClient</span> = <span class="literal">true</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># auth.method 指定使用哪种认证方式对frpc与frps之间进行认证。</span></span><br><span class="line"><span class="comment"># 如果指定了 token ，令牌将被读入登录消息中。</span></span><br><span class="line"><span class="comment"># 如果指定了 oidc ，将使用OIDC设置颁发OIDC令牌。默认情况下，此值为 token 。</span></span><br><span class="line"><span class="attr">auth.method</span> = <span class="string">&quot;token&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># auth.additionalScopes 指定包含其他范围的身份验证信息，可选值为 HeartBeats 、 NewWorkConns 。</span></span><br><span class="line"><span class="comment"># auth.additionalScopes = [&quot;HeartBeats&quot;, &quot;NewWorkConns&quot;]</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 身份验证令牌</span></span><br><span class="line"><span class="attr">auth.token</span> = <span class="string">&quot;12345678&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># OIDC颁发者指定用于验证OIDC令牌的颁发者。</span></span><br><span class="line"><span class="attr">auth.oidc.issuer</span> = <span class="string">&quot;&quot;</span></span><br><span class="line"><span class="comment"># oidc audience 指定验证时OIDC令牌应包含的受众。</span></span><br><span class="line"><span class="attr">auth.oidc.audience</span> = <span class="string">&quot;&quot;</span></span><br><span class="line"><span class="comment"># oidc skipExpiryCheck 指定是否跳过检查OIDC令牌是否过期。</span></span><br><span class="line"><span class="attr">auth.oidc.skipExpiryCheck</span> = <span class="literal">false</span></span><br><span class="line"><span class="comment"># oidc skipIssuerCheck 指定是否跳过检查OIDC令牌的颁发者声明是否与 OidcIssuer 中指定的颁发者匹配。</span></span><br><span class="line"><span class="attr">auth.oidc.skipIssuerCheck</span> = <span class="literal">false</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># userConnTimeout 指定等待工作连接的最长时间。</span></span><br><span class="line"><span class="comment"># userConnTimeout = 10</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 只允许frpc绑定你列出的端口。默认情况下，不会有任何限制。</span></span><br><span class="line"><span class="attr">allowPorts</span> = [</span><br><span class="line">  &#123; start = <span class="number">2000</span>, end = <span class="number">3000</span> &#125;,</span><br><span class="line">  &#123; single = <span class="number">3001</span> &#125;,</span><br><span class="line">  &#123; single = <span class="number">3003</span> &#125;,</span><br><span class="line">  &#123; start = <span class="number">4000</span>, end = <span class="number">50000</span> &#125;</span><br><span class="line">]</span><br><span class="line"></span><br><span class="line"><span class="comment"># 每个客户端可以使用的最大端口数，默认值为0表示没有限制。</span></span><br><span class="line"><span class="attr">maxPortsPerClient</span> = <span class="number">0</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 如果 subDomainHost 不为空，则可以在frpc的配置文件中设置 type 为 http 或 https 时的 subdomain 。</span></span><br><span class="line"><span class="comment"># 当子域为 test 时，路由使用的主机为 test.frps.com 。</span></span><br><span class="line"><span class="attr">subDomainHost</span> = <span class="string">&quot;frps.com&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># HTTP请求的自定义404页面。</span></span><br><span class="line"><span class="comment"># custom404Page = &quot;/path/to/404.html&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 指定UDP数据包大小，单位为字节。如果未设置，则默认值为1500。客户端和服务器之间的参数应该相同。它会影响UDP和SUDP代理。</span></span><br><span class="line"><span class="attr">udpPacketSize</span> = <span class="number">1500</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># NAT打孔分析数据的保留时间。</span></span><br><span class="line"><span class="attr">natholeAnalysisDataReserveHours</span> = <span class="number">168</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># SSH隧道网关</span></span><br><span class="line"><span class="comment"># 如果要启用此功能，则 bindPort 参数是必需的，而其他参数是可选的。</span></span><br><span class="line"><span class="comment"># 默认情况下，此功能处于禁用状态。如果 bindPort 大于0，则启用它。</span></span><br><span class="line"><span class="comment"># sshTunnelGateway.bindPort = 2200</span></span><br><span class="line"><span class="comment"># sshTunnelGateway.privateKeyFile = &quot;/home/frp-user/.ssh/id_rsa&quot;</span></span><br><span class="line"><span class="comment"># sshTunnelGateway.autoGenPrivateKeyPath = &quot;&quot;</span></span><br><span class="line"><span class="comment"># sshTunnelGateway.authorizedKeysFile = &quot;/home/frp-user/.ssh/authorized_keys&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="section">[[httpPlugins]]</span></span><br><span class="line"><span class="attr">name</span> = <span class="string">&quot;user-manager&quot;</span></span><br><span class="line"><span class="attr">addr</span> = <span class="string">&quot;127.0.0.1:9000&quot;</span></span><br><span class="line"><span class="attr">path</span> = <span class="string">&quot;/handler&quot;</span></span><br><span class="line"><span class="attr">ops</span> = [<span class="string">&quot;Login&quot;</span>]</span><br><span class="line"></span><br><span class="line"><span class="section">[[httpPlugins]]</span></span><br><span class="line"><span class="attr">name</span> = <span class="string">&quot;port-manager&quot;</span></span><br><span class="line"><span class="attr">addr</span> = <span class="string">&quot;127.0.0.1:9001&quot;</span></span><br><span class="line"><span class="attr">path</span> = <span class="string">&quot;/handler&quot;</span></span><br><span class="line"><span class="attr">ops</span> = [<span class="string">&quot;NewProxy&quot;</span>]</span><br></pre></td></tr></table></figure>
<h2 id="客户端配置文件-frpc-toml"><a href="#客户端配置文件-frpc-toml" class="headerlink" title="客户端配置文件 frpc.toml"></a>客户端配置文件 frpc.toml</h2><figure class="highlight toml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># frpc.toml</span></span><br><span class="line"><span class="comment"># 此配置文件仅供参考。请不要直接使用此配置来运行程序，因为它可能存在各种问题。</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 您的代理名称将更改为 &#123;user&#125;.&#123;proxy&#125; 。</span></span><br><span class="line"><span class="attr">user</span> = <span class="string">&quot;your_name&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 必须包含IPv6的文本地址或主机名在方括号中，例如 [::1]:80 、 [IPv6-host]:http 或 [IPv6-host%zone]:80 。对于单个 serverAddr 字段，不需要方括号，例如 serverAddr = &quot;::&quot; 。</span></span><br><span class="line"><span class="attr">serverAddr</span> = <span class="string">&quot;0.0.0.0&quot;</span></span><br><span class="line"><span class="attr">serverPort</span> = <span class="number">7000</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># STUN服务器帮助穿透NAT孔。</span></span><br><span class="line"><span class="comment"># natHoleStunServer = &quot;stun.easyvoip.com:3478&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 决定首次登录失败时是否退出程序，否则连续重新登录frps，默认值为 true 。</span></span><br><span class="line"><span class="attr">loginFailExit</span> = <span class="literal">true</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 控制台或实际日志文件路径，如 ./frpc.log 。</span></span><br><span class="line"><span class="attr">log.to</span> = <span class="string">&quot;./frpc.log&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 跟踪、调试、信息、警告、错误</span></span><br><span class="line"><span class="comment"># trace, debug, info, warn, error</span></span><br><span class="line"><span class="attr">log.level</span> = <span class="string">&quot;info&quot;</span></span><br><span class="line"><span class="attr">log.maxDays</span> = <span class="number">3</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># log.to为控制台时是否禁用日志颜色，默认为 false 。</span></span><br><span class="line"><span class="attr">log.disablePrintColor</span> = <span class="literal">false</span></span><br><span class="line"></span><br><span class="line"><span class="attr">auth.method</span> = <span class="string">&quot;token&quot;</span></span><br><span class="line"><span class="comment"># auth.additionalScopes 指定包含其他范围的身份验证信息，可选值为 HeartBeats 、 NewWorkConns 。</span></span><br><span class="line"><span class="comment"># auth.additionalScopes = [&quot;HeartBeats&quot;, &quot;NewWorkConns&quot;]</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 身份验证令牌</span></span><br><span class="line"><span class="attr">auth.token</span> = <span class="string">&quot;12345678&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># oidc.clientID 指定用于获取OIDC认证令牌的客户端ID。</span></span><br><span class="line"><span class="comment"># auth.oidc.clientID = &quot;&quot;</span></span><br><span class="line"><span class="comment"># oidc.clientSecret 指定用于在OIDC身份验证中获取令牌的客户端密钥。</span></span><br><span class="line"><span class="comment"># auth.oidc.clientSecret = &quot;&quot;</span></span><br><span class="line"><span class="comment"># oidc.audience 指定OIDC身份验证中令牌的受众。</span></span><br><span class="line"><span class="comment"># auth.oidc.audience = &quot;&quot;</span></span><br><span class="line"><span class="comment"># 如果 AuthenticationMethod == &quot;oidc&quot; ， oidc.scope 指定令牌在OIDC身份验证中的权限。默认情况下，此值为 &quot;&quot; 。</span></span><br><span class="line"><span class="comment"># auth.oidc.scope = &quot;&quot;</span></span><br><span class="line"><span class="comment"># oidc.tokenEndpointURL 指定实现OIDC Token Endpoint的URL。它将用于获取OIDC令牌。</span></span><br><span class="line"><span class="comment"># auth.oidc.tokenEndpointURL = &quot;&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># oidc.additionalEndpointParams 指定要发送到OIDC Token Endpoint的其他参数。</span></span><br><span class="line"><span class="comment"># 例如，如果要指定 audience 参数，可以设置如下。</span></span><br><span class="line"><span class="comment"># frp会将 audience=&lt;value&gt; 、 var1=&lt;value&gt; 添加到附加参数中。</span></span><br><span class="line"><span class="comment"># auth.oidc.additionalEndpointParams.audience = &quot;https://dev.auth.com/api/v2/&quot;</span></span><br><span class="line"><span class="comment"># auth.oidc.additionalEndpointParams.var1 = &quot;foobar&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 通过http api设置控制frpc操作的管理员地址，例如重新加载。</span></span><br><span class="line"><span class="attr">webServer.addr</span> = <span class="string">&quot;127.0.0.1&quot;</span></span><br><span class="line"><span class="attr">webServer.port</span> = <span class="number">7400</span></span><br><span class="line"><span class="attr">webServer.user</span> = <span class="string">&quot;admin&quot;</span></span><br><span class="line"><span class="attr">webServer.password</span> = <span class="string">&quot;admin&quot;</span></span><br><span class="line"><span class="comment"># 管理员资产目录。默认情况下，这些资产与frpc绑在一起。</span></span><br><span class="line"><span class="comment"># webServer.assetsDir = &quot;./static&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 在管理员监听器中启用golang pprof处理程序。</span></span><br><span class="line"><span class="attr">webServer.pprofEnable</span> = <span class="literal">false</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 拨号到服务器等待连接完成的最长时间。默认值为10秒。</span></span><br><span class="line"><span class="comment"># transport.dialServerTimeout = 10</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># dialServerKeepalive 指定frpc和frps之间活动网络连接的保活探测器之间的间隔。如果为负数，则禁用保活探测器。</span></span><br><span class="line"><span class="comment"># transport.dialServerKeepalive = 7200</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 连接会提前建立，默认值为0。</span></span><br><span class="line"><span class="attr">transport.poolCount</span> = <span class="number">5</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 如果使用TCP多路复用技术，则默认值为 true ，它必须与frps相同</span></span><br><span class="line"><span class="comment"># transport.tcpMux = true</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 指定TCP多路复用的保活间隔，仅当 tcpMux 为 true 时才有效。</span></span><br><span class="line"><span class="comment"># transport.tcpMuxKeepaliveInterval = 60</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 用于连接服务器的通信协议。</span></span><br><span class="line"><span class="comment"># 现在支持TCP、KCP、QUIC、WEBSOCKET和WSS，默认为TCP。</span></span><br><span class="line"><span class="attr">transport.protocol</span> = <span class="string">&quot;tcp&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 连接服务器时设置客户端绑定IP，默认为空。</span></span><br><span class="line"><span class="comment"># 仅当 protocol = tcp 或 protocol = websocket 时，才会使用该值。</span></span><br><span class="line"><span class="attr">transport.connectServerLocalIP</span> = <span class="string">&quot;0.0.0.0&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 如果要通过HTTP代理或SOCKS5代理或NTLM代理连接frps, 您可以在此处或在全局环境变量中设置 proxyURL 。它仅在 protocol 为TCP时才有效。</span></span><br><span class="line"><span class="comment"># transport.proxyURL = &quot;http://user:passwd@192.168.1.128:8080&quot;</span></span><br><span class="line"><span class="comment"># transport.proxyURL = &quot;socks5://user:passwd@192.168.1.128:1080&quot;</span></span><br><span class="line"><span class="comment"># transport.proxyURL = &quot;ntlm://user:passwd@192.168.1.128:2080&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># QUIC协议选项</span></span><br><span class="line"><span class="comment"># transport.quic.keepalivePeriod = 10</span></span><br><span class="line"><span class="comment"># transport.quic.maxIdleTimeout = 30</span></span><br><span class="line"><span class="comment"># transport.quic.maxIncomingStreams = 100000</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 如果 tls.enable 为 true ，则frpc将通过TLS连接frps。</span></span><br><span class="line"><span class="comment"># 从v0.50.0开始，默认值已更改为 true ，并且默认启用TLS。</span></span><br><span class="line"><span class="attr">transport.tls.enable</span> = <span class="literal">true</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># transport.tls.certFile = &quot;client.crt&quot;</span></span><br><span class="line"><span class="comment"># transport.tls.keyFile = &quot;client.key&quot;</span></span><br><span class="line"><span class="comment"># transport.tls.trustedCaFile = &quot;ca.crt&quot;</span></span><br><span class="line"><span class="comment"># transport.tls.serverName = &quot;example.com&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 如果 disableCustomTLSFirstByte 设置为 false , 当启用TLS时，frpc将使用第一个自定义字节与frps建立连接。</span></span><br><span class="line"><span class="comment"># 从v0.50.0开始，默认值已更改为 true ，并且默认禁用第一个自定义字节。</span></span><br><span class="line"><span class="comment"># transport.tls.disableCustomTLSFirstByte = true</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 心跳配置，不建议修改默认值。</span></span><br><span class="line"><span class="comment"># heartbeatInterval 默认值为10， heartbeatTimeout 默认值为90。设置负值以禁用它。</span></span><br><span class="line"><span class="comment"># transport.heartbeatInterval = 30</span></span><br><span class="line"><span class="comment"># transport.heartbeatTimeout = 90</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 指定DNS服务器，frpc将使用它而不是使用默认的。</span></span><br><span class="line"><span class="comment"># dnsServer = &quot;8.8.8.8&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 你想要启动的代理名称。默认值为空，表示所有代理。</span></span><br><span class="line"><span class="comment"># start = [&quot;ssh&quot;, &quot;dns&quot;]</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 指定UDP数据包大小，单位为字节。如果未设置，则默认值为1500。此参数在客户端和服务器之间应相同。它会影响UDP和SUDP代理。</span></span><br><span class="line"><span class="attr">udpPacketSize</span> = <span class="number">1500</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 客户端的其他 metadatas 。</span></span><br><span class="line"><span class="attr">metadatas.var1</span> = <span class="string">&quot;abc&quot;</span></span><br><span class="line"><span class="attr">metadatas.var2</span> = <span class="string">&quot;123&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 包含其他的代理配置文件。</span></span><br><span class="line"><span class="comment"># includes = [&quot;./confd/*.ini&quot;]</span></span><br><span class="line"></span><br><span class="line"><span class="section">[[proxies]]</span></span><br><span class="line"><span class="comment"># ssh 是唯一的代理名称。如果全局 user 不为空，它将更改为 &#123;user&#125;.&#123;proxy&#125; 如 your_name.ssh 。</span></span><br><span class="line"><span class="attr">name</span> = <span class="string">&quot;ssh&quot;</span></span><br><span class="line"><span class="attr">type</span> = <span class="string">&quot;tcp&quot;</span></span><br><span class="line"><span class="attr">localIP</span> = <span class="string">&quot;127.0.0.1&quot;</span></span><br><span class="line"><span class="attr">localPort</span> = <span class="number">22</span></span><br><span class="line"><span class="comment"># 限制此代理的带宽，单位为KB和MB。</span></span><br><span class="line"><span class="attr">transport.bandwidthLimit</span> = <span class="string">&quot;1MB&quot;</span></span><br><span class="line"><span class="comment"># 限制带宽的位置，可以是 client 或 server ，默认为 client 。</span></span><br><span class="line"><span class="attr">transport.bandwidthLimitMode</span> = <span class="string">&quot;client&quot;</span></span><br><span class="line"><span class="comment"># 如果为 true ，则此代理的流量将被加密，默认为 false 。</span></span><br><span class="line"><span class="attr">transport.useEncryption</span> = <span class="literal">false</span></span><br><span class="line"><span class="comment"># 如果为 true ，则流量将被压缩。</span></span><br><span class="line"><span class="attr">transport.useCompression</span> = <span class="literal">false</span></span><br><span class="line"><span class="comment"># 远程frps上的监听端口</span></span><br><span class="line"><span class="attr">remotePort</span> = <span class="number">6001</span></span><br><span class="line"><span class="comment"># frps将对同一组中的代理的连接进行负载均衡。</span></span><br><span class="line"><span class="attr">loadBalancer.group</span> = <span class="string">&quot;test_group&quot;</span></span><br><span class="line"><span class="comment"># 组应具有相同的组密钥</span></span><br><span class="line"><span class="attr">loadBalancer.groupKey</span> = <span class="string">&quot;123456&quot;</span></span><br><span class="line"><span class="comment"># 后端服务开启健康检查，现在支持 tcp 和 http 。</span></span><br><span class="line"><span class="comment"># frpc将连接本地服务端口以检测其运行状态。</span></span><br><span class="line"><span class="attr">healthCheck.type</span> = <span class="string">&quot;tcp&quot;</span></span><br><span class="line"><span class="comment"># 健康检查连接超时</span></span><br><span class="line"><span class="attr">healthCheck.timeoutSeconds</span> = <span class="number">3</span></span><br><span class="line"><span class="comment"># 如果连续失败3次，代理将从frps中移除。</span></span><br><span class="line"><span class="attr">healthCheck.maxFailed</span> = <span class="number">3</span></span><br><span class="line"><span class="comment"># 每10秒做一次健康检查。</span></span><br><span class="line"><span class="attr">healthCheck.intervalSeconds</span> = <span class="number">10</span></span><br><span class="line"><span class="comment"># 每个代理的其他 metadatas 。它将被传递给服务器端插件以供使用。</span></span><br><span class="line"><span class="attr">metadatas.var1</span> = <span class="string">&quot;abc&quot;</span></span><br><span class="line"><span class="attr">metadatas.var2</span> = <span class="string">&quot;123&quot;</span></span><br><span class="line"><span class="comment"># 你可以通过注解给代理添加一些额外的信息。这些注解会显示在frps仪表盘上。</span></span><br><span class="line"><span class="section">[proxies.annotations]</span></span><br><span class="line"><span class="attr">key1</span> = <span class="string">&quot;value1&quot;</span></span><br><span class="line"><span class="attr">&quot;prefix/key2&quot;</span> = <span class="string">&quot;value2&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="section">[[proxies]]</span></span><br><span class="line"><span class="attr">name</span> = <span class="string">&quot;ssh_random&quot;</span></span><br><span class="line"><span class="attr">type</span> = <span class="string">&quot;tcp&quot;</span></span><br><span class="line"><span class="attr">localIP</span> = <span class="string">&quot;192.168.31.100&quot;</span></span><br><span class="line"><span class="attr">localPort</span> = <span class="number">22</span></span><br><span class="line"><span class="comment"># 如果 remotePort 为0，frps会随机为你分配一个端口。</span></span><br><span class="line"><span class="attr">remotePort</span> = <span class="number">0</span></span><br><span class="line"></span><br><span class="line"><span class="section">[[proxies]]</span></span><br><span class="line"><span class="attr">name</span> = <span class="string">&quot;dns&quot;</span></span><br><span class="line"><span class="attr">type</span> = <span class="string">&quot;udp&quot;</span></span><br><span class="line"><span class="attr">localIP</span> = <span class="string">&quot;114.114.114.114&quot;</span></span><br><span class="line"><span class="attr">localPort</span> = <span class="number">53</span></span><br><span class="line"><span class="attr">remotePort</span> = <span class="number">6002</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 将您的域名解析为 serverAddr 。因此，您可以使用 http://web01.yourdomain.com 浏览Web01和 http://web02.yourdomain.com 浏览Web02。</span></span><br><span class="line"><span class="section">[[proxies]]</span></span><br><span class="line"><span class="attr">name</span> = <span class="string">&quot;web01&quot;</span></span><br><span class="line"><span class="attr">type</span> = <span class="string">&quot;http&quot;</span></span><br><span class="line"><span class="attr">localIP</span> = <span class="string">&quot;127.0.0.1&quot;</span></span><br><span class="line"><span class="attr">localPort</span> = <span class="number">80</span></span><br><span class="line"><span class="comment"># httpUser 和 httpPassword 是HTTP协议的安全认证。</span></span><br><span class="line"><span class="comment"># 如果没有设置，你可以在没有证书的情况下访问这个 customDomains 。</span></span><br><span class="line"><span class="attr">httpPassword</span> = <span class="string">&quot;admin&quot;</span></span><br><span class="line"><span class="comment"># 如果给frps设置的域名为frps.com，那么你可以通过URL访问 [web01]代理（http://web01.frps.com）。</span></span><br><span class="line"><span class="attr">subdomain</span> = <span class="string">&quot;web01&quot;</span></span><br><span class="line"><span class="attr">customDomains</span> = [<span class="string">&quot;web01.yourdomain.com&quot;</span>]</span><br><span class="line"><span class="comment"># locations 仅适用于HTTP类型。</span></span><br><span class="line"><span class="attr">locations</span> = [<span class="string">&quot;/&quot;</span>, <span class="string">&quot;/pic&quot;</span>]</span><br><span class="line"><span class="comment"># 如果HTTP基本认证的用户名是abc，则将请求路由到这个服务。</span></span><br><span class="line"><span class="comment"># routeByHTTPUser = abc</span></span><br><span class="line"><span class="attr">hostHeaderRewrite</span> = <span class="string">&quot;example.com&quot;</span></span><br><span class="line"><span class="attr">requestHeaders.set.x-from-where</span> = <span class="string">&quot;frp&quot;</span></span><br><span class="line"><span class="attr">responseHeaders.set.foo</span> = <span class="string">&quot;bar&quot;</span></span><br><span class="line"><span class="attr">healthCheck.type</span> = <span class="string">&quot;http&quot;</span></span><br><span class="line"><span class="comment">#frpc将会向本地的HTTP服务发送一个GET请求，请求的路径是 /status 。</span></span><br><span class="line"><span class="comment"># 当HTTP服务返回 2xx HTTP响应状态码时，它处于活动状态。</span></span><br><span class="line"><span class="attr">healthCheck.path</span> = <span class="string">&quot;/status&quot;</span></span><br><span class="line"><span class="attr">healthCheck.intervalSeconds</span> = <span class="number">10</span></span><br><span class="line"><span class="attr">healthCheck.maxFailed</span> = <span class="number">3</span></span><br><span class="line"><span class="attr">healthCheck.timeoutSeconds</span> = <span class="number">3</span></span><br><span class="line"><span class="comment"># 设置健康检查头</span></span><br><span class="line"><span class="attr">healthCheck.httpHeaders</span>=[</span><br><span class="line">    &#123; name = <span class="string">&quot;x-from-where&quot;</span>, value = <span class="string">&quot;frp&quot;</span> &#125;</span><br><span class="line">]</span><br><span class="line"></span><br><span class="line"><span class="section">[[proxies]]</span></span><br><span class="line"><span class="attr">name</span> = <span class="string">&quot;web02&quot;</span></span><br><span class="line"><span class="attr">type</span> = <span class="string">&quot;https&quot;</span></span><br><span class="line"><span class="attr">localIP</span> = <span class="string">&quot;127.0.0.1&quot;</span></span><br><span class="line"><span class="attr">localPort</span> = <span class="number">8000</span></span><br><span class="line"><span class="attr">subdomain</span> = <span class="string">&quot;web02&quot;</span></span><br><span class="line"><span class="attr">customDomains</span> = [<span class="string">&quot;web02.yourdomain.com&quot;</span>]</span><br><span class="line"><span class="comment"># 如果不是空的，frpc将使用代理协议将连接信息传输到你的本地服务。</span></span><br><span class="line"><span class="comment"># v1 或 v2 或 &quot;&quot; （空）</span></span><br><span class="line"><span class="attr">transport.proxyProtocolVersion</span> = <span class="string">&quot;v2&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="section">[[proxies]]</span></span><br><span class="line"><span class="attr">name</span> = <span class="string">&quot;tcpmuxhttpconnect&quot;</span></span><br><span class="line"><span class="attr">type</span> = <span class="string">&quot;tcpmux&quot;</span></span><br><span class="line"><span class="attr">multiplexer</span> = <span class="string">&quot;httpconnect&quot;</span></span><br><span class="line"><span class="attr">localIP</span> = <span class="string">&quot;127.0.0.1&quot;</span></span><br><span class="line"><span class="attr">localPort</span> = <span class="number">10701</span></span><br><span class="line"><span class="attr">customDomains</span> = [<span class="string">&quot;tunnel1&quot;</span>]</span><br><span class="line"><span class="comment"># routeByHTTPUser = &quot;user1&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="section">[[proxies]]</span></span><br><span class="line"><span class="attr">name</span> = <span class="string">&quot;plugin_unix_domain_socket&quot;</span></span><br><span class="line"><span class="attr">type</span> = <span class="string">&quot;tcp&quot;</span></span><br><span class="line"><span class="attr">remotePort</span> = <span class="number">6003</span></span><br><span class="line"><span class="comment"># 如果定义了插件，则 localIP 和 localPort 是无效的。插件将处理从frps获取的连接。</span></span><br><span class="line"><span class="section">[proxies.plugin]</span></span><br><span class="line"><span class="attr">type</span> = <span class="string">&quot;unix_domain_socket&quot;</span></span><br><span class="line"><span class="attr">unixPath</span> = <span class="string">&quot;/var/run/docker.sock&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="section">[[proxies]]</span></span><br><span class="line"><span class="attr">name</span> = <span class="string">&quot;plugin_http_proxy&quot;</span></span><br><span class="line"><span class="attr">type</span> = <span class="string">&quot;tcp&quot;</span></span><br><span class="line"><span class="attr">remotePort</span> = <span class="number">6004</span></span><br><span class="line"><span class="section">[proxies.plugin]</span></span><br><span class="line"><span class="attr">type</span> = <span class="string">&quot;http_proxy&quot;</span></span><br><span class="line"><span class="attr">httpUser</span> = <span class="string">&quot;abc&quot;</span></span><br><span class="line"><span class="attr">httpPassword</span> = <span class="string">&quot;abc&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="section">[[proxies]]</span></span><br><span class="line"><span class="attr">name</span> = <span class="string">&quot;plugin_socks5&quot;</span></span><br><span class="line"><span class="attr">type</span> = <span class="string">&quot;tcp&quot;</span></span><br><span class="line"><span class="attr">remotePort</span> = <span class="number">6005</span></span><br><span class="line"><span class="section">[proxies.plugin]</span></span><br><span class="line"><span class="attr">type</span> = <span class="string">&quot;socks5&quot;</span></span><br><span class="line"><span class="attr">username</span> = <span class="string">&quot;abc&quot;</span></span><br><span class="line"><span class="attr">password</span> = <span class="string">&quot;abc&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="section">[[proxies]]</span></span><br><span class="line"><span class="attr">name</span> = <span class="string">&quot;plugin_static_file&quot;</span></span><br><span class="line"><span class="attr">type</span> = <span class="string">&quot;tcp&quot;</span></span><br><span class="line"><span class="attr">remotePort</span> = <span class="number">6006</span></span><br><span class="line"><span class="section">[proxies.plugin]</span></span><br><span class="line"><span class="attr">type</span> = <span class="string">&quot;static_file&quot;</span></span><br><span class="line"><span class="attr">localPath</span> = <span class="string">&quot;/var/www/blog&quot;</span></span><br><span class="line"><span class="attr">stripPrefix</span> = <span class="string">&quot;static&quot;</span></span><br><span class="line"><span class="attr">httpUser</span> = <span class="string">&quot;abc&quot;</span></span><br><span class="line"><span class="attr">httpPassword</span> = <span class="string">&quot;abc&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="section">[[proxies]]</span></span><br><span class="line"><span class="attr">name</span> = <span class="string">&quot;plugin_https2http&quot;</span></span><br><span class="line"><span class="attr">type</span> = <span class="string">&quot;https&quot;</span></span><br><span class="line"><span class="attr">customDomains</span> = [<span class="string">&quot;test.yourdomain.com&quot;</span>]</span><br><span class="line"><span class="section">[proxies.plugin]</span></span><br><span class="line"><span class="attr">type</span> = <span class="string">&quot;https2http&quot;</span></span><br><span class="line"><span class="attr">localAddr</span> = <span class="string">&quot;127.0.0.1:80&quot;</span></span><br><span class="line"><span class="attr">crtPath</span> = <span class="string">&quot;./server.crt&quot;</span></span><br><span class="line"><span class="attr">keyPath</span> = <span class="string">&quot;./server.key&quot;</span></span><br><span class="line"><span class="attr">hostHeaderRewrite</span> = <span class="string">&quot;127.0.0.1&quot;</span></span><br><span class="line"><span class="attr">requestHeaders.set.x-from-where</span> = <span class="string">&quot;frp&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="section">[[proxies]]</span></span><br><span class="line"><span class="attr">name</span> = <span class="string">&quot;plugin_https2https&quot;</span></span><br><span class="line"><span class="attr">type</span> = <span class="string">&quot;https&quot;</span></span><br><span class="line"><span class="attr">customDomains</span> = [<span class="string">&quot;test.yourdomain.com&quot;</span>]</span><br><span class="line"><span class="section">[proxies.plugin]</span></span><br><span class="line"><span class="attr">type</span> = <span class="string">&quot;https2https&quot;</span></span><br><span class="line"><span class="attr">localAddr</span> = <span class="string">&quot;127.0.0.1:443&quot;</span></span><br><span class="line"><span class="attr">crtPath</span> = <span class="string">&quot;./server.crt&quot;</span></span><br><span class="line"><span class="attr">keyPath</span> = <span class="string">&quot;./server.key&quot;</span></span><br><span class="line"><span class="attr">hostHeaderRewrite</span> = <span class="string">&quot;127.0.0.1&quot;</span></span><br><span class="line"><span class="attr">requestHeaders.set.x-from-where</span> = <span class="string">&quot;frp&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="section">[[proxies]]</span></span><br><span class="line"><span class="attr">name</span> = <span class="string">&quot;plugin_http2https&quot;</span></span><br><span class="line"><span class="attr">type</span> = <span class="string">&quot;http&quot;</span></span><br><span class="line"><span class="attr">customDomains</span> = [<span class="string">&quot;test.yourdomain.com&quot;</span>]</span><br><span class="line"><span class="section">[proxies.plugin]</span></span><br><span class="line"><span class="attr">type</span> = <span class="string">&quot;http2https&quot;</span></span><br><span class="line"><span class="attr">localAddr</span> = <span class="string">&quot;127.0.0.1:443&quot;</span></span><br><span class="line"><span class="attr">hostHeaderRewrite</span> = <span class="string">&quot;127.0.0.1&quot;</span></span><br><span class="line"><span class="attr">requestHeaders.set.x-from-where</span> = <span class="string">&quot;frp&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="section">[[proxies]]</span></span><br><span class="line"><span class="attr">name</span> = <span class="string">&quot;secret_tcp&quot;</span></span><br><span class="line"><span class="comment"># 如果类型为 secret tcp ，则 remotePort 无效。</span></span><br><span class="line"><span class="comment"># 想要连接本地端口的人应该使用STCP代理部署另一个frpc，角色是 visitors 。</span></span><br><span class="line"><span class="attr">type</span> = <span class="string">&quot;stcp&quot;</span></span><br><span class="line"><span class="comment"># secretKey 用于访客身份验证。</span></span><br><span class="line"><span class="attr">secretKey</span> = <span class="string">&quot;abcdefg&quot;</span></span><br><span class="line"><span class="attr">localIP</span> = <span class="string">&quot;127.0.0.1&quot;</span></span><br><span class="line"><span class="attr">localPort</span> = <span class="number">22</span></span><br><span class="line"><span class="comment"># 如果不为空，则只有指定用户的访客才能连接。</span></span><br><span class="line"><span class="comment"># 否则，来自同一 user 的 visitors 可以连接。 &quot;*&quot; 表示允许所有用户。</span></span><br><span class="line"><span class="attr">allowUsers</span> = [<span class="string">&quot;*&quot;</span>]</span><br><span class="line"></span><br><span class="line"><span class="section">[[proxies]]</span></span><br><span class="line"><span class="attr">name</span> = <span class="string">&quot;p2p_tcp&quot;</span></span><br><span class="line"><span class="attr">type</span> = <span class="string">&quot;xtcp&quot;</span></span><br><span class="line"><span class="attr">secretKey</span> = <span class="string">&quot;abcdefg&quot;</span></span><br><span class="line"><span class="attr">localIP</span> = <span class="string">&quot;127.0.0.1&quot;</span></span><br><span class="line"><span class="attr">localPort</span> = <span class="number">22</span></span><br><span class="line"><span class="comment"># 如果不为空，则只有指定用户的访客才能连接。</span></span><br><span class="line"><span class="comment"># 否则，来自同一 user 的 visitors 才可以连接。 &quot;*&quot; 表示允许所有用户。</span></span><br><span class="line"><span class="attr">allowUsers</span> = [<span class="string">&quot;user1&quot;</span>, <span class="string">&quot;user2&quot;</span>]</span><br><span class="line"></span><br><span class="line"><span class="comment"># frpc role visitor -&gt; frps -&gt; frpc role server</span></span><br><span class="line"><span class="section">[[visitors]]</span></span><br><span class="line"><span class="attr">name</span> = <span class="string">&quot;secret_tcp_visitor&quot;</span></span><br><span class="line"><span class="attr">type</span> = <span class="string">&quot;stcp&quot;</span></span><br><span class="line"><span class="comment"># the server name you want to visitor</span></span><br><span class="line"><span class="attr">serverName</span> = <span class="string">&quot;secret_tcp&quot;</span></span><br><span class="line"><span class="attr">secretKey</span> = <span class="string">&quot;abcdefg&quot;</span></span><br><span class="line"><span class="comment"># 将此地址连接到访客STCP服务器。</span></span><br><span class="line"><span class="attr">bindAddr</span> = <span class="string">&quot;127.0.0.1&quot;</span></span><br><span class="line"><span class="comment"># bindPort 可以小于0，这意味着不要绑定到端口，而只接收从其他访问者重定向的连接。（SUDP现在不支持此功能）</span></span><br><span class="line"><span class="attr">bindPort</span> = <span class="number">9000</span></span><br><span class="line"></span><br><span class="line"><span class="section">[[visitors]]</span></span><br><span class="line"><span class="attr">name</span> = <span class="string">&quot;p2p_tcp_visitor&quot;</span></span><br><span class="line"><span class="attr">type</span> = <span class="string">&quot;xtcp&quot;</span></span><br><span class="line"><span class="comment"># 如果未设置 serverUser ，则默认为当前用户。</span></span><br><span class="line"><span class="attr">serverUser</span> = <span class="string">&quot;user1&quot;</span></span><br><span class="line"><span class="attr">serverName</span> = <span class="string">&quot;p2p_tcp&quot;</span></span><br><span class="line"><span class="attr">secretKey</span> = <span class="string">&quot;abcdefg&quot;</span></span><br><span class="line"><span class="attr">bindAddr</span> = <span class="string">&quot;127.0.0.1&quot;</span></span><br><span class="line"><span class="comment"># bindPort 可以小于0，这意味着不要绑定到端口，而只接收从其他访问者重定向的连接。（SUDP现在不支持此功能）</span></span><br><span class="line"><span class="attr">bindPort</span> = <span class="number">9001</span></span><br><span class="line"><span class="comment"># 当需要自动隧道持久化时，设置为 true 。</span></span><br><span class="line"><span class="attr">keepTunnelOpen</span> = <span class="literal">false</span></span><br><span class="line"><span class="comment"># 当 keepTunnelOpen 设置为 true 时有效，每小时尝试穿孔的次数。</span></span><br><span class="line"><span class="attr">maxRetriesAnHour</span> = <span class="number">8</span></span><br><span class="line"><span class="attr">minRetryInterval</span> = <span class="number">90</span></span><br><span class="line"><span class="comment"># fallbackTo = &quot;stcp_visitor&quot;</span></span><br><span class="line"><span class="comment"># fallbackTimeoutMs = 500</span></span><br></pre></td></tr></table></figure>

]]></content>
  </entry>
  <entry>
    <title>Hello World</title>
    <url>/posts/4a17b156H/</url>
    <content><![CDATA[<p>I’m cicii.</p>
]]></content>
  </entry>
  <entry>
    <title>数据库概论</title>
    <url>/posts/bef137fa/</url>
    <content><![CDATA[<p><strong>推荐教材</strong></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">数据库系统概论 第5版</span><br><span class="line">王珊 / 萨师煊 高等教育出版社</span><br><span class="line"></span><br><span class="line">数据库系统概念 原书第6版</span><br><span class="line">Abraham Silberschatz / Henry F. Korth / S. Sudarshan 机械工业出版社</span><br></pre></td></tr></table></figure>

<h1 id="数据库概论"><a href="#数据库概论" class="headerlink" title="数据库概论"></a>数据库概论</h1><h2 id="绪论"><a href="#绪论" class="headerlink" title="绪论"></a>绪论</h2><h3 id="数据"><a href="#数据" class="headerlink" title="数据"></a>数据</h3><h4 id="概念"><a href="#概念" class="headerlink" title="概念"></a>概念</h4><p>Data<br>数据是描述事物的符号记录，是数据库中存储的基本对象。数据与其语义是密不可分的。</p>
<h5 id="表现形式"><a href="#表现形式" class="headerlink" title="表现形式"></a>表现形式</h5><p>其表现形式可以是数字(number)、文字(text)、图表(graph)、图像(image)、音频(audio)、视频(video)等。[文图声像]</p>
<h3 id="数据模型"><a href="#数据模型" class="headerlink" title="数据模型"></a>数据模型</h3><h4 id="概念-1"><a href="#概念-1" class="headerlink" title="概念"></a>概念</h4><p>数据模型是对现实世界数据特征的模拟和抽象表达，是模型化数据和信息的工具，是数据库系统的核心和基础。</p>
<h4 id="组成三要素"><a href="#组成三要素" class="headerlink" title="组成三要素"></a>组成三要素</h4><h5 id="数据结构"><a href="#数据结构" class="headerlink" title="数据结构"></a>数据结构</h5><p>是对系统静态特性的描述，描述数据库的组成对象以及对象之间的联系。</p>
<h5 id="数据操作"><a href="#数据操作" class="headerlink" title="数据操作"></a>数据操作</h5><p>是对系统动态特性的描述，描述在相应的数据结构上的操作类型和操作方式。<br>数据操作主要包括对数据库的检索和更新两大类操作，其中更新操作又包括插入、删除和修改等。数据模型必须定义这些操作的确切含义、操作符号、操作规则（如优先级）以及实现操作的语言。</p>
<h5 id="数据约束"><a href="#数据约束" class="headerlink" title="数据约束"></a>数据约束</h5><p>既刻画数据静态特征，也表示数据动态行为规则，描述数据结构内数据间的语法和语义关联、它们之间的制约和依存关系，以及数据动态变化规则，以保证数据的正确、有效和相容。数据约束包括数据完整性约束、数据安全性约束以及并发控制性约束。</p>
<h4 id="二分类"><a href="#二分类" class="headerlink" title="二分类"></a>二分类</h4><h5 id="概念层数据模型"><a href="#概念层数据模型" class="headerlink" title="概念层数据模型"></a>概念层数据模型</h5><h6 id="概念-2"><a href="#概念-2" class="headerlink" title="概念"></a>概念</h6><p>也称信息模型，数据抽象的最高层，是以用户视角对数据建模，用于数据库设计。</p>
<h6 id="主要表示方法"><a href="#主要表示方法" class="headerlink" title="主要表示方法"></a>主要表示方法</h6><p>实体-联系图，也称E-R图，用于描述现实世界中实体及其属性，以及实体之间联系。<br>实体用矩形表示，矩形框内写明实体的名称。<br>属性用椭圆形表示，描述实体的具体特征。<br>联系用菱形表示，描述了实体之间的关系。<br>这些关系可以是一对一、一对多或多对多等。</p>
<h5 id="组织层数据模型"><a href="#组织层数据模型" class="headerlink" title="组织层数据模型"></a>组织层数据模型</h5><p>是以计算机视角对数据建模，用于数据库管理系统的实现。</p>
<h6 id="逻辑层数据模型"><a href="#逻辑层数据模型" class="headerlink" title="逻辑层数据模型"></a>逻辑层数据模型</h6><p>数据抽象的中间层，是设计数据库系统的核心。<br>包括层次模型、网状模型、关系模型、面向对象模型、对象关系数据模型、半结构化数据模型等。<br>面向对象型数据库OODBS中的基本结构是对象而不是记录。</p>
<h6 id="物理层数据模型"><a href="#物理层数据模型" class="headerlink" title="物理层数据模型"></a>物理层数据模型</h6><p>数据抽象的最底层，描述数据在存储介质上的组织结构，确定数据的物理存储结构，数据存取路径。</p>
<h3 id="数据库"><a href="#数据库" class="headerlink" title="数据库"></a>数据库</h3><h4 id="概念-3"><a href="#概念-3" class="headerlink" title="概念"></a>概念</h4><p>DataBase，简称DB<br>    数据库顾名思义是存储数据的仓库。<br>    严格地说，数据库是长期存储在计算机中的、有组织的、可共享的大量数据的集合。</p>
<h4 id="分类"><a href="#分类" class="headerlink" title="分类"></a>分类</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">关系型数据库</span><br><span class="line">RD    (Relational Database)</span><br><span class="line">非关系型数据库</span><br><span class="line">NRD   (Non-Relational Database)</span><br><span class="line">NoSQL (Not Only SQL)				译为&quot;不仅仅是SQL&quot;</span><br></pre></td></tr></table></figure>

<h3 id="数据库管理系统"><a href="#数据库管理系统" class="headerlink" title="数据库管理系统"></a>数据库管理系统</h3><h4 id="概念-4"><a href="#概念-4" class="headerlink" title="概念"></a>概念</h4><p>DataBase Management System，简称DBMS<br>    数据库管理系统是一种操纵和管理数据库的大型软件，用于建立、使用和维护数据库。</p>
<h4 id="分类-1"><a href="#分类-1" class="headerlink" title="分类"></a>分类</h4><pre><code>关系型数据库管理系统
RDBMS		(Relational Database Management System)
非关系型数据库管理系统
NRDBMS		(Non-Relational Database Management System)
NoSQL DBMS	(Not Only SQL Database Management System)

常见的关系型数据库管理系统有
MySQL、Oracle、SQL Server、PostgreSQL等
常见的非关系型数据库管理系统有
MongoDB(文档型)、Redis(键值型)、Cassandra(列存储型)、Neo4j(图型)等
</code></pre>
<h4 id="排行榜"><a href="#排行榜" class="headerlink" title="排行榜"></a>排行榜</h4><p><a href="https://db-engines.com/en/ranking">DB-Engines Ranking</a></p>
<h3 id="结构化查询语言"><a href="#结构化查询语言" class="headerlink" title="结构化查询语言"></a>结构化查询语言</h3><h4 id="概念-5"><a href="#概念-5" class="headerlink" title="概念"></a>概念</h4><p>Structured Query Language，简称SQL<br>    结构化查询语言是用于管理关系型数据库的高级的非过程化编程语言，允许用户与数据库进行交互，执行各种数据操作。几乎所有的关系型数据库管理系统都支持SQL。</p>
<h4 id="功能"><a href="#功能" class="headerlink" title="功能"></a>功能</h4><pre><code>数据查询(Data Query)
数据定义(Data Definition)
数据操纵(Data Manipulation)
数据控制(Data Control)
事务控制(Transaction Control)
······
</code></pre>
<h4 id="分类-2"><a href="#分类-2" class="headerlink" title="分类"></a>分类</h4><h5 id="数据查询语言"><a href="#数据查询语言" class="headerlink" title="数据查询语言"></a>数据查询语言</h5><p>Data Query Language，简称DQL<br>    数据查询语言用于从数据库中检索数据。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">SELECT</span><br><span class="line">*用于从数据库的一个或多个表中检索数据</span><br></pre></td></tr></table></figure>
<h5 id="数据定义语言"><a href="#数据定义语言" class="headerlink" title="数据定义语言"></a>数据定义语言</h5><p>Data Definition Language，简称DDL<br>    数据定义语言用于创建、修改和删除数据库对象的结构，并不操作数据库对象中的实际数据。<br><strong>数据库对象</strong></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">表Table</span><br><span class="line">视图View</span><br><span class="line">索引Index</span><br><span class="line">存储过程Stored Procedure</span><br><span class="line">触发器Trigger</span><br><span class="line">······</span><br></pre></td></tr></table></figure>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">CREATE</span><br><span class="line">*用于创建数据库对象</span><br><span class="line">ALTER</span><br><span class="line">*用于修改已有数据库对象</span><br><span class="line">DROP</span><br><span class="line">*用于删除数据库对象</span><br><span class="line">TRUNCATE</span><br><span class="line">只用于删除表中的所有数据，但保留表结构</span><br><span class="line">相比于DELETE操作，TRUNCATE执行速度更快，且不能通过回滚操作来恢复删除的数据</span><br></pre></td></tr></table></figure>
<h5 id="数据操纵语言"><a href="#数据操纵语言" class="headerlink" title="数据操纵语言"></a>数据操纵语言</h5><p>Data Manipulation Language，简称DML<br>    数据操纵语言用于插入、更新和删除数据库中的数据。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">INSERT</span><br><span class="line">*用于向表中插入新数据</span><br><span class="line">UPDATE</span><br><span class="line">*用于修改表中的已有数据</span><br><span class="line">DELETE</span><br><span class="line">*用于从表中删除数据</span><br></pre></td></tr></table></figure>
<h5 id="数据控制语言"><a href="#数据控制语言" class="headerlink" title="数据控制语言"></a>数据控制语言</h5><p>Data Control Language，简称DCL<br>    数据控制语言用于管理用户或角色对数据库对象的访问权限。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">GRANT</span><br><span class="line">*用于授予用户或角色对数据库对象的访问权限</span><br><span class="line">REVOKE</span><br><span class="line">*用于撤销用户或角色对数据库对象的访问权限</span><br></pre></td></tr></table></figure>
<h5 id="事务控制语言"><a href="#事务控制语言" class="headerlink" title="事务控制语言"></a>事务控制语言</h5><p>Transaction Control Language，简称TCL<br>    事务控制语言用于管理数据库中事务的提交和回滚。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">BEGIN TRANSACTION</span><br><span class="line">用于明确地标记事务的开始</span><br><span class="line">COMMIT</span><br><span class="line">*用于将事务中的所有操作永久性地应用到数据库，并结束当前的事务</span><br><span class="line">ROLLBACK</span><br><span class="line">*用于撤销事务中的所有已执行的操作，并将数据库恢复到事务开始之前的状态</span><br><span class="line">SAVEPOINT</span><br><span class="line">用于设置一个临时的标记点，以便在后续可以回滚到该点，而不是回滚整个事务</span><br><span class="line">RELEASE SAVEPOINT</span><br><span class="line">用于释放(删除)先前在当前事务中定义的保存点</span><br></pre></td></tr></table></figure>

<h3 id="数据库系统"><a href="#数据库系统" class="headerlink" title="数据库系统"></a>数据库系统</h3><h4 id="概念-6"><a href="#概念-6" class="headerlink" title="概念"></a>概念</h4><p>Database System，简称DBS<br>    数据库系统是由硬件、软件、数据库、使用人员组成的。</p>
<h4 id="四特点"><a href="#四特点" class="headerlink" title="四特点"></a>四特点</h4><p>数据结构化<br>数据共享性高、冗余度低且易扩充<br>数据独立性高<br>数据由数据库管理系统统一管理和控制</p>
<h4 id="数据管理技术发展经历三阶段"><a href="#数据管理技术发展经历三阶段" class="headerlink" title="数据管理技术发展经历三阶段"></a>数据管理技术发展经历三阶段</h4><p>人工管理阶段<br>文件系统阶段<br>数据库系统阶段</p>
<h4 id="二体系结构"><a href="#二体系结构" class="headerlink" title="二体系结构"></a>二体系结构</h4><h5 id="内部体系结构"><a href="#内部体系结构" class="headerlink" title="内部体系结构"></a>内部体系结构</h5><h6 id="三级模式结构"><a href="#三级模式结构" class="headerlink" title="三级模式结构"></a>三级模式结构</h6><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">外模式（也称为子模式或用户模式） 用户级   三级模式结构的最外层</span><br><span class="line">是数据库用户（包括应用程序员和最终用户）能够看见和使用的局部数据的逻辑结构和特征的描述，是数据库用户的数据视图，是数据库概念模式的子集。一个数据库可以有多个外模式。</span><br><span class="line"></span><br><span class="line">概念模式（也称为逻辑模式）      概念级   三级模式结构的中间层</span><br><span class="line">描述数据库中全体数据的逻辑结构和特征，是所有用户的公共数据视图。</span><br><span class="line"></span><br><span class="line">内模式（也称为存储模式）        物理级   三级模式结构的物理层，并不是最底层的物理层</span><br><span class="line">描述了数据的物理结构和存储方式，是数据在数据库内部的表示形式或底层描述。一个数据库只有一个内模式。</span><br></pre></td></tr></table></figure>

<h6 id="二级映像"><a href="#二级映像" class="headerlink" title="二级映像"></a>二级映像</h6><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">外模式/模式的映像：实现外模式到模式的相互转换。保证了数据的逻辑独立性</span><br><span class="line">模式/内模式的映像：实现模式到内模式的相互转换。保证了数据的物理独立性</span><br></pre></td></tr></table></figure>

<h5 id="外部体系结构"><a href="#外部体系结构" class="headerlink" title="外部体系结构"></a>外部体系结构</h5><h6 id="单用户结构"><a href="#单用户结构" class="headerlink" title="单用户结构"></a>单用户结构</h6><p>整个数据库系统都安装在一台计算机上，并由一个用户独占使用，不同机器之间不能共享数据。</p>
<h6 id="主从式结构（也称为集中式结构）"><a href="#主从式结构（也称为集中式结构）" class="headerlink" title="主从式结构（也称为集中式结构）"></a>主从式结构（也称为集中式结构）</h6><p>一个主机带多个终端用户。</p>
<h6 id="分布式结构"><a href="#分布式结构" class="headerlink" title="分布式结构"></a>分布式结构</h6><p>数据库中的数据在逻辑上是一个整体，但物理地分布在计算机网络的不同结点上。</p>
<h6 id="客户机-服务器（C-S）结构"><a href="#客户机-服务器（C-S）结构" class="headerlink" title="客户机&#x2F;服务器（C&#x2F;S）结构"></a>客户机&#x2F;服务器（C&#x2F;S）结构</h6><h6 id="浏览器-服务器（B-S）结构"><a href="#浏览器-服务器（B-S）结构" class="headerlink" title="浏览器&#x2F;服务器（B&#x2F;S）结构"></a>浏览器&#x2F;服务器（B&#x2F;S）结构</h6><h2 id="关系数据库"><a href="#关系数据库" class="headerlink" title="关系数据库"></a>关系数据库</h2><h3 id="关系数据模型"><a href="#关系数据模型" class="headerlink" title="关系数据模型"></a>关系数据模型</h3><h4 id="概念-7"><a href="#概念-7" class="headerlink" title="概念"></a>概念</h4><p>在关系结构的数据库中用二维表格的形式表示实体以及实体之间的联系的模型</p>
<h4 id="关系数据结构"><a href="#关系数据结构" class="headerlink" title="关系数据结构"></a>关系数据结构</h4><h5 id="实体"><a href="#实体" class="headerlink" title="实体"></a>实体</h5><p>实体是客观存在且具有公共性质的可相互区别的现实世界对象的集合。</p>
<h5 id="属性"><a href="#属性" class="headerlink" title="属性"></a>属性</h5><p>属性是实体所具有的某一特征或性质。</p>
<h5 id="域"><a href="#域" class="headerlink" title="域"></a>域</h5><p>域是一组具有相同数据类型的值的集合，是属性的取值范围。</p>
<h5 id="元组"><a href="#元组" class="headerlink" title="元组"></a>元组</h5><p>元组用于表示关系中的单行记录或实体。</p>
<h5 id="笛卡尔积"><a href="#笛卡尔积" class="headerlink" title="笛卡尔积"></a>笛卡尔积</h5><p>笛卡尔积可表示为一个二维表。表中的每行对应一个元组，表中的每列对应一个域。</p>
<h5 id="关系"><a href="#关系" class="headerlink" title="关系"></a>关系</h5><p>关系是由多个域组成的笛卡尔积的有限子集。<br>笛卡尔积不满足交换律,<br>(d1,d2,···,dn)!&#x3D;(d2,d1,···,dn)<br>但关系满足交换律。<br>(d1,d2,···,dn)&#x3D;(d2,d1,···,dn)</p>
<h5 id="候选码"><a href="#候选码" class="headerlink" title="候选码"></a>候选码</h5><p>关系中的某个属性组的值能够唯一地标识一个元组，而其子集不能，该属性组被称为候选码。一个关系可以有多个候选码。</p>
<h5 id="主码（也称为主键）"><a href="#主码（也称为主键）" class="headerlink" title="主码（也称为主键）"></a>主码（也称为主键）</h5><p>主码由候选码中选定，每个关系有且仅有一个主码。       </p>
<h5 id="主属性"><a href="#主属性" class="headerlink" title="主属性"></a>主属性</h5><p>候选码中的属性被称为主属性。</p>
<h5 id="非主属性（也称为非码属性）"><a href="#非主属性（也称为非码属性）" class="headerlink" title="非主属性（也称为非码属性）"></a>非主属性（也称为非码属性）</h5><p>不包含在任何候选码中的属性被称为非主属性。</p>
<h5 id="关系模式"><a href="#关系模式" class="headerlink" title="关系模式"></a>关系模式</h5><p>形象化地表示为R(U,D,dom,F)<br>R：关系名<br>U：组成该关系的属性名集合<br>D：属性组U中属性所来自的域<br>DOM：属性向域的映象集合<br>F：属性间数据的依赖关系集合</p>
<h4 id="关系模型完整性"><a href="#关系模型完整性" class="headerlink" title="关系模型完整性"></a>关系模型完整性</h4><h5 id="实体完整性"><a href="#实体完整性" class="headerlink" title="实体完整性"></a>实体完整性</h5><p>是指关系的主关键字不能重复也不能取空值。</p>
<h5 id="参照完整性"><a href="#参照完整性" class="headerlink" title="参照完整性"></a>参照完整性</h5><p>是指定义建立关系之间联系的主关键字与外部关键字引用的约束条件。</p>
<h5 id="用户定义完整性"><a href="#用户定义完整性" class="headerlink" title="用户定义完整性"></a>用户定义完整性</h5><p>是指根据应用环境的要求和实际的需要，对某一具体应用所涉及的数据提出约束性条件。</p>
<h4 id="关系操作"><a href="#关系操作" class="headerlink" title="关系操作"></a>关系操作</h4><p>包括查询(Query)操作和插入(Insert)、删除(Delete)、修改(Update)操作两大部分。</p>
<h3 id="关系代数"><a href="#关系代数" class="headerlink" title="关系代数"></a>关系代数</h3><p>是一种形式化的查询语言</p>
<h4 id="传统的集合运算"><a href="#传统的集合运算" class="headerlink" title="传统的集合运算"></a>传统的集合运算</h4><p>包括并、差、交和广义笛卡尔积四种运算。</p>
<h4 id="专门的关系运算"><a href="#专门的关系运算" class="headerlink" title="专门的关系运算"></a>专门的关系运算</h4><p>包含选择、投影、连接和除等。</p>
]]></content>
  </entry>
</search>
